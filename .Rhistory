shinydashboardPlus::dashboardPage(
header = shinydashboardPlus::dashboardHeader(
title = "Dilans Roulette"
),
sidebar = NULL,
body = shinydashboard::dashboardBody(
shiny::fluidRow(
shinydashboardPlus::box(
title = "Dilans Roulette",
width = 12,
shiny::textInput(
inputid = "navne",
label = "Indskriv navne - sepereret med komma",
placeholder = "F.eks. 'SA, Noah, Ernst'"
)
)
)
)
)
devtools::load_all()
run_app()
devtools::load_all()
shinydashboardPlus::dashboardPage(
header = shinydashboardPlus::dashboardHeader(
title = "Dilans Roulette"
),
sidebar = NULL,
body = shinydashboard::dashboardBody(
shiny::fluidRow(
shinydashboardPlus::box(
title = "Dilans Roulette",
width = 12,
shiny::textInput(
inputid = "navne",
label = "Indskriv navne - sepereret med komma",
placeholder = "F.eks. 'SA, Noah, Ernst'"
)
)
)
)
)
run_app()
devtools::load_all()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
input$navne
strsplit(input$navne, ",\\s*")[[1]]
devtools::load_all()
run_app()
devtools::load_all()
run_app()
shinyjs::useShinyjs()
shinyjs::useShinyjs()
devtools::load_all()
run_app()
del1 <- pizza_menu <- data.frame(
nummer = 1:39,
navn = c(
"VESUVIO", "KEBAB", "KØBENHAVN", "HAWAII", "MARGHERITA",
"CAPRICCIOSA", "ITALIANA", "TONNY SPECIAL", "MILANO", "NAPOLI",
"PEP", "ROMA", "VEGETARIA", "APOLLO", "LA LUNA",
"CALZONE", "BALKAN", "MATADOR", "MAMA MIA", "GRÆSK",
"ORIENTALE", "AMORE", "PALERMO", "PARMA", "MAMMA ROSA",
"POMPEI", "DELA", "DILAN", "VIKING", "GORGONZOLA",
"CARLO", "POLLO", "RHODOS", "PEPPERONI", "PARIS",
"ORINO", "BELLO", "NEXUS", "AMAZON"
)
)
del1 <- data.frame(
nummer = 1:39,
navn = c(
"VESUVIO", "KEBAB", "KØBENHAVN", "HAWAII", "MARGHERITA",
"CAPRICCIOSA", "ITALIANA", "TONNY SPECIAL", "MILANO", "NAPOLI",
"PEP", "ROMA", "VEGETARIA", "APOLLO", "LA LUNA",
"CALZONE", "BALKAN", "MATADOR", "MAMA MIA", "GRÆSK",
"ORIENTALE", "AMORE", "PALERMO", "PARMA", "MAMMA ROSA",
"POMPEI", "DELA", "DILAN", "VIKING", "GORGONZOLA",
"CARLO", "POLLO", "RHODOS", "PEPPERONI", "PARIS",
"ORINO", "BELLO", "NEXUS", "AMAZON"
)
)
del1
usethis::use_package("yaml")
file <- system.file("dilansmenu.yml", package = "DilansRoulette")
yaml::file
file
menu <- yaml::read_yaml(file = file)
menu
usethis::use_package("dplyr")
menu <- yaml::read_yaml(file = file) |>
dplyr::bind_rows()
menu
menu |> as.list()
menu |> as.data.frame()
file <- system.file("dilansmenu.yml", package = "DilansRoulette")
menu <- yaml::read_yaml(file = file) |>
dplyr::bind_rows()
menu
dilans_menu()
devtools::load_all()
dilans_menu()
install.packages("reactable")
usethis::use_package("reactable")
devtools::load_all()
run_app()
iris
devtools::load_all()
run_app()
react_list_names()
.data <- data.frame(
name = users,
tries = rep(0, length(users)),
chosen = rep("", length(users))
)
users <- react_list_names()
.data <- data.frame(
name = users,
tries = rep(0, length(users)),
chosen = rep("", length(users))
)
.data
devtools::load_all()
run_app()
devtools::load_all()
run_app()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
.data <- data.frame(
person = names_vector,
forsog = rep(0, length(names_vector)),
valgt = rep("", length(names_vector))
) |> dplyr::mutate(ID = dplyr::row_number(), .before = 1L)
5 %% 2
5 %% 3
6 %% 3
0 %% 3
1 %% 3
2 %% 3
3 %% 3
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
antal_spins
input$reroll
react_game_data()
react_game_data() |>
dplyr::filter(valgt == "")
5 %% 3
6 %% 2
4 %% 2
4 %% 1
3 %% 3
3 %% 3
4 %% 2
devtools::load_all()
run_app()
devtools::load_all()
run_app()
run_app()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
menukort <- dilans_menu()
menukort
sample(menukort$nummer, size = 1)
sample(menukort$nummer, size = 1)
sample(menukort$nummer, size = 1)
sample(menukort$nummer, size = 1)
sample(menukort$nummer, size = 1)
sample(menukort$nummer, size = 1)
devtools::test()
usethis::use_test()
usethis::use_test()
testthat::expect_no_error(dilans_menu())
menu <- dilans_menu()
nrow(menu)
elementer <- nrow(menu)
numre <- menu$nummer |> unique() |> length()
numre
elementer
testthat::expect_equal(elementer, numre)
devtools::test()
sample(menukort$nummer, size = 1)
sample(menukort$nummer, size = 1)
sample(menukort$nummer, size = 1)
sample(menukort$nummer, size = 1)
sample(menukort$nummer, size = 1)
sample(menukort$nummer, size = 1)
rolled_no <- sample(menukort$nummer, size = 1)
menu_entry <- menukort |> dplyr::filter(nummer == rolled_no)
menu_entry
tekst <- paste0(menu_entry$nummer, ": ", menu_entry$navn, " ", menu_entry$beskrivelse))
tekst <- paste0(menu_entry$nummer, ": ", menu_entry$navn, " ", menu_entry$beskrivelse)
tekst
tekst <- paste0("NO:", menu_entry$nummer, ": ", menu_entry$navn, " ", menu_entry$beskrivelse)
tekst
tekst <- paste0("NO: ", menu_entry$nummer, ": ", menu_entry$navn, " ", menu_entry$beskrivelse)
tekst
tekst <- paste0("NO: ", menu_entry$nummer, ": ", menu_entry$navn, " - ", menu_entry$beskrivelse)
tekst
devtools::load_all()
run_app()
devtools::load_all()
run_app()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::build()
min(c())
data.frame()
df1 <- data.frame()
df1 <- data.frame(ID = numeric())
df1
devtools::load_all()
minimum(df1$ID)
df1 <- data.frame(ID = c(1,2,3))
testthat::expect_equal(minimum(df1$ID) == 1)
testthat::expect_equal(minimum(df1$ID), 1)
testthat::expect_equal(minimum(df3$ID), 3)
df3 <- data.frame(ID = c(NA,11,3))
testthat::expect_equal(minimum(df3$ID), 3)
devtools::load_all()
df3 <- data.frame(ID = c(NA,11,3))
testthat::expect_equal(minimum(df3$ID), 3)
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
run_app()
devtools::load_all()
run_app()
.data
dput(.data)
gameinfo1 <- structure(
list(
ID = 1:3,
person = c("SA", "Noah", "Ernst"),
forsog = c(1, 0, 0),
valgt = c("NO: 49: DURUM KYLLING - NA", "", "")
),
row.names = c(NA, -3L), class = "data.frame")
player1 <- 1
playerid1 <- 1
pick_next(1, gameinfo1)
gameinfo1 <- structure(
list(
ID = 1:3,
person = c("SA", "Noah", "Ernst"),
forsog = c(1, 0, 0),
valgt = c("NO: 49: DURUM KYLLING - NA", "", "")
),
row.names = c(NA, -3L), class = "data.frame")
pick_next(1, gameinfo1)
testthat::expect_equal(pick_next(1, gameinfo1), 2)
testthat::expect_equal(pick_next(2, gameinfo1), 3)
testthat::test_that("Pick next works as expected", {
gameinfo1 <- structure(
list(
ID = 1:3,
person = c("SA", "Noah", "Ernst"),
forsog = c(1, 0, 0),
valgt = c("NO: 49: DURUM KYLLING - NA", "", "")
),
row.names = c(NA, -3L), class = "data.frame")
testthat::expect_equal(pick_next(1, gameinfo1), 2)
testthat::expect_equal(pick_next(2, gameinfo1), 3)
})testthat::expect_equal(pick_next(3, gameinfo1), 1)
pick_next(3, gameinfo1)
gameinfo1 <- structure(
list(
ID = 1:3,
person = c("SA", "Noah", "Ernst"),
forsog = c(1, 0, 0),
valgt = c("", "", "")
),
row.names = c(NA, -3L), class = "data.frame")
testthat::expect_equal(pick_next(1, gameinfo1), 2)
testthat::expect_equal(pick_next(2, gameinfo1), 3)
testthat::test_that("Pick next works as expected", {
gameinfo1 <- structure(
list(
ID = 1:3,
person = c("SA", "Noah", "Ernst"),
forsog = c(1, 0, 0),
valgt = c("", "", "")
),
row.names = c(NA, -3L), class = "data.frame")
testthat::expect_equal(pick_next(1, gameinfo1), 2)
testthat::expect_equal(pick_next(2, gameinfo1), 3)
})testthat::expect_equal(pick_next(3, gameinfo1), 1)
gameinfo1 <- structure(
list(
ID = 1:3,
person = c("SA", "Noah", "Ernst"),
forsog = c(1, 0, 0),
valgt = c("", "", "")
),
row.names = c(NA, -3L), class = "data.frame")
gameinfo1
testthat::expect_equal(pick_next(1, gameinfo1), 2)
testthat::expect_equal(pick_next(2, gameinfo1), 3)
testthat::test_that("Pick next works as expected", {
gameinfo1 <- structure(
list(
ID = 1:3,
person = c("SA", "Noah", "Ernst"),
forsog = c(1, 0, 0),
valgt = c("", "", "")
),
row.names = c(NA, -3L), class = "data.frame")
testthat::expect_equal(pick_next(1, gameinfo1), 2)
testthat::expect_equal(pick_next(2, gameinfo1), 3)
})testthat::expect_equal(pick_next(3, gameinfo1), 1)
pick_next(3, gameinfo1)
gameinfo2 <- structure(
list(
ID = 1:3,
person = c("SA", "Noah", "Ernst"),
forsog = c(1, 0, 0),
valgt = c("NO: 49: DURUM KYLLING - NA", "", "")
),
row.names = c(NA, -3L), class = "data.frame")
gameinfo2 <- structure(
list(
ID = 1:3,
person = c("SA", "Noah", "Ernst"),
forsog = c(1, 0, 0),
valgt = c("NO: 49: DURUM KYLLING - NA", "", "")
),
row.names = c(NA, -3L), class = "data.frame")
testthat::expect_equal(pick_next(1, gameinfo2), 2)
testthat::expect_equal(pick_next(2, gameinfo2), 3)
testthat::expect_equal(pick_next(3, gameinfo2), 2)
gameinfo3 <- structure(
list(
ID = 1:3,
person = c("SA", "Noah", "Ernst"),
forsog = c(1, 0, 0),
valgt = c("NO: 49: DURUM KYLLING - NA", "NO: 49: DURUM KYLLING - NA", "NO: 49: DURUM KYLLING - NA")
),
row.names = c(NA, -3L), class = "data.frame")
testthat::expect_equal(pick_next(4, gameinfo2), 2)
gameinfo3 <- structure(
list(
ID = 1:3,
person = c("SA", "Noah", "Ernst"),
forsog = c(1, 0, 0),
valgt = c("NO: 49: DURUM KYLLING - NA", "NO: 49: DURUM KYLLING - NA", "NO: 49: DURUM KYLLING - NA")
),
row.names = c(NA, -3L), class = "data.frame")
testthat::expect_null(pick_next(3, gameinfo3))
devtools::test()
df1 <- data.frame(ID = numeric())
df1
minimum(df1$ID)
df2 <- data.frame(ID = c(2,1,3))
testthat::expect_equal(minimum(df2$ID), 1)
devtools::load_all()
devtools::test()
devtools::document()
devtools::load_all()
run_app()
devtools::load_all()
devtools::load_all()
run_app()
nummer <- "50"
menu_entry <- menukort |> dplyr::filter(nummer == nummer)
menu_entry
menu_entry <- menukort |> dplyr::filter(nummer == nummer)
nummer
menu_entry <- menukort |> dplyr::filter(nummer == {nummer})
menu_entry
{nummer}
menu_entry <- menukort |> dplyr::filter(nummer == {nummer})
menu_entry
menu_entry <- menukort |> dplyr::filter(nummer == !!!nummer)
menu_entry <- menukort |> dplyr::filter(nummer == !!nummer)
menu_entry
tekst <- paste0("NO: ", menu_entry$nummer, ": ", menu_entry$navn, " - ", menu_entry$beskrivelse)
tekst
menu_entry <- menukort |> dplyr::filter(nummer == !!nummer)
if(is.na(menu_entry$beskrivelse)) menu_entry$beskrivelse <- ""
tekst <- paste0("NO: ", menu_entry$nummer, ": ", menu_entry$navn, " - ", menu_entry$beskrivelse)
tekst
devtools::load_all()
run_app()
menu_desc("50")
testthat::expect_equal(menu_desc("50"), "NO: 50: DURUM GRÆSK BØF")
testthat::expect_equal(menu_desc("50.A"), "NO: 50: DURUM GRÆSK BØF")
testthat::expect_equal(menu_desc("51.A"), "NO: 50: DURUM GRÆSK BØF")
testthat::expect_equal(menu_desc("50.A"), "NO: 50: DURUM GRÆSK BØF")
testthat::expect_equal(menu_desc("50"), "NO: 50: DURUM GRÆSK BØF")
devtools::load_all()
testthat::expect_equal(menu_desc("50.A"), "NO: 50: DURUM GRÆSK BØF")
menu_entry
nummer
menukort <- dilans_menu()
menu_entry <- menukort |> dplyr::filter(nummer == !!nummer)
testthat::expect_equal(menu_desc("50.A"), "NO: 50: DURUM GRÆSK BØF")
devtools::load_all()
testthat::expect_equal(menu_desc("50"), "NO: 50: DURUM GRÆSK BØF")
testthat::expect_equal(menu_desc("50.A"), "NO: 50: DURUM GRÆSK BØF")
testthat::expect_equal(menu_desc("50.A"), "NO: 50.A: DURUM FALAFEL")
testthat::expect_equal(menu_desc("5"), "NO: 50.A: DURUM FALAFEL")
devtools::test()
devtools::check()
devtools::check(document = T)
devtools::u Sys.setlocale("LC_ALL", "en_US.UTF-8")
Sys.setlocale("LC_ALL", "en_US.UTF-8")
tools::showNonASCIIfile()
tools::showNonASCIIfile("R/server.R")
tools::showNonASCIIfile("R/ui.R")
devtools::load_all()
run_app()
devtools::build()
devtools::check()
usethis::use_package("shinydashboardPlus")
devtools::check()
Sys.time()
usethis::use_version()
person("Nicolaj", "Lind", role = c("aut", "cre"))
devtools::check()
devtools::check()
devtools::check()
testthat::expect_equal(menu_desc("50"), "NO: 50: DURUM GRÆSK BØF")
menu_desc("50")
testthat::expect_no_error(dilans_menu())
menu <- dilans_menu()
file <- system.file("dilansmenu.yml", package = "DilansRoulette")
yaml::read_yaml(file = file) |>
dplyr::bind_rows()
yaml::read_yaml(file = file)
devtools::load_all()
yaml::read_yaml(file = file) |>
dplyr::bind_rows()
yaml::read_yaml(file = file) |>
dplyr::bind_rows()
devtools::load_all(".")
yaml::read_yaml(file = file) |>
dplyr::bind_rows()
yaml::read_yaml(file = file) |>
dplyr::bind_rows()
devtools::test()
menu_desc("50")
devtools::load_all(".")
menu_desc("50")
devtools::check()
devtools::test()
menukort
menukort <- dilans_menu()
menukort
devtools::load_all(".")
testthat::expect_equal(menu_desc("50"), "NO: 50: DURUM GRÆSK BØF")
menu_desc("50")
menukort
nummer
nummer <- 50
menu_entry <- menukort |> dplyr::filter(nummer == !!nummer)
menu_entry
tekst <- paste0("NO: ", menu_entry$nummer, ": ", menukort$kategori, " - ", menu_entry$navn)
tekst
menukort
menu_entry <- menukort |> dplyr::filter(nummer == !!nummer)
menu_entry
tekst <- paste0("NO: ", menu_entry$nummer, ": ", menukort$kategori, " - ", menu_entry$navn)
tekst
devtools::load_all(".")
devtools::test()
menu_desc("50.A")
testthat::expect_equal(menu_desc("50.A"), "NO: 50.A: Durum Ruller - FALAFEL")
testthat::expect_equal(menu_desc("5"), "NO: 5: MARGHERITA - tomatsauce og ost")
testthat::expect_equal(menu_desc("5"), "NO: 5: Pizza - MARGHERITA - tomatsauce og ost")
devtools::test()
testthat::expect_equal(menu_desc("50"), "NO: 50: Durum Ruller - GRÆSK BØF")
devtools::test()
